name: Test

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.16, 1.17]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up golang ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ matrix.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.os }}-go-${{ matrix.go-version }}-
      - name: Install test dependencies
        shell: bash
        run: |
          sudo apt-get -y install libnss3-tools
          go install golang.org/x/lint/golint@latest
          go install golang.org/x/tools/cmd/cover@latest
          go install github.com/mattn/goveralls@latest
          make getkeys
      - name: Run Tests
        shell: bash
        run: make
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: goveralls -coverprofile=coverage.out -service=github
      - name: Verify a mar sig with Fx's signmar
        shell: bash
        run: |
          make getmarcorpus testmarcorpus
          crt="$(go run examples/sign.go /tmp/marworkdir/firefox-60.0esr-60.0.1esr.partial.mar /tmp/resigned.mar | grep 'rsa cert'|awk '{print $5}')"
          mkdir /tmp/nssdb
          certutil -d /tmp/nssdb -A -i "$crt" -n "testmar" -t ",,u"
          LD_LIBRARY_PATH=tools/signmar/lib ./tools/signmar/signmar -d /tmp/nssdb -n testmar -v /tmp/resigned.mar
